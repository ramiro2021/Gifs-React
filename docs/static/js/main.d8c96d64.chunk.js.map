{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAsB9C,OAEI,0BAAMC,SAfW,SAACC,GAClBC,QAAQC,IAAI,oBACZF,EAAEG,iBAEEN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,OAUd,2BACIS,KAAK,OACLC,MAAOX,EACPY,SAxBc,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,G,KAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,yCACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAG,gCAASA,OCDXO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAlBAC,qBAAU,WAENxB,EAAQC,GAEHwB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAACpB,IAEGqB,EDpB2BM,CAAa3B,GAAjCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAEVH,EAAOJ,KAAI,SAACC,GAAD,OAEJ,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UElBnBmB,EAAe,WAAM,MAGM7C,mBAAS,CAAC,UAAW,iBAH3B,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAS9B,OACI,6BACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ+C,EAAWrB,KAAI,SAAAT,GAAQ,OAEf,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,UCrB1C+B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d8c96d64.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log('submit realizado');\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 1) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7yPhvgqErM22TjlmO8TPYdjYWLFvUbSh`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport '../index.css';\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__pulse\" >\r\n            <img src={url} alt={title}></img>\r\n            <p><strong>{title}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n//  { useState, useEffect } \r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {images.map((img) =>\r\n                    (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                )}\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n\r\n                }, 1000)\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Vikings', 'Harry Potter']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['Naruto', ...categories]);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        (\r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category} />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}